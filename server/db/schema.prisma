datasource db {
  provider = "postgresql"
  url      = env("DB_DSN")
}

model edu_skill {
  id           String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  education_id String @db.Uuid
  name         String @db.VarChar(255)
  percentage   Int?   @db.SmallInt

  // Relation to education
  education educations @relation(fields: [education_id], references: [id])

  // Index for efficient querying
  @@index([education_id], map: "idx_edu_skill_education_id")
}

model educations {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  school      String    @db.VarChar(255)
  course      String    @db.VarChar(255)
  started     String    @db.VarChar(255)
  ended       String    @db.VarChar(255)
  description String
  status      Int?      @default(1) @db.SmallInt
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  deleted_at  DateTime? @db.Timestamp(6)

  // Relation to edu_skill
  edu_skill edu_skill[]

  // Index for soft delete filtering
  @@index([deleted_at], map: "idx_education_deleted_at")
  // Index for active educations
  @@index([deleted_at, status], map: "idx_education_active")
}

model exp_skill {
  id            String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String @db.VarChar(255)
  percentage    Int?   @db.SmallInt
  experience_id String @db.Uuid

  // Relation to experiences
  experiences experiences? @relation(fields: [experience_id], references: [id])

  // Index for efficient querying
  @@index([experience_id], map: "idx_exp_skill_experience_id")
}

model experiences {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company      String    @db.VarChar(255)
  title        String    @db.VarChar(255)
  location     String    @db.VarChar(255)
  started      String    @db.VarChar(255)
  ended        String    @db.VarChar(255)
  descriptions String[]
  status       Int?      @default(1) @db.SmallInt
  created_at   DateTime  @default(now()) @db.Timestamptz(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  deleted_at   DateTime? @db.Timestamptz(6)

  // Relation to exp_skill
  exp_skill exp_skill[]

  // Index for soft delete filtering
  @@index([deleted_at], map: "idx_experiences_deleted_at")
  // Index for active experiences
  @@index([deleted_at, status], map: "idx_experiences_active")
}

model files {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  file       String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
}

model links {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  link       String    @db.VarChar(255)
  type       String    @db.VarChar(255)
  status     Int?      @default(1) @db.SmallInt
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamptz(6)

  // Index for soft delete and status filtering
  @@index([deleted_at, status], map: "idx_links_active")
}

model services {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String    @db.VarChar(255)
  description String    @db.VarChar(255)
  logo        String    @db.VarChar(255)
  status      Int?      @default(1) @db.SmallInt
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  deleted_at  DateTime? @db.Timestamp(6)

  @@index([deleted_at, status], map: "idx_services_active")
}

model sessions {
  id            String    @id @db.Uuid
  user_id       String    @db.Uuid
  email         String    @db.VarChar(255)
  refresh_token String    @db.VarChar(512)
  is_revoked    Boolean   @default(false)
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  expires_at    DateTime? @db.Timestamp(6)

  // Index for efficient querying
  @@index([user_id], map: "idx_sessions_user_id")
}

model users {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name     String    @db.VarChar(255)
  last_name      String    @db.VarChar(255)
  phone          String    @db.VarChar(255)
  address        String    @db.VarChar(255)
  description    String    @db.VarChar(255)
  email          String    @db.VarChar(255)
  username       String?   @db.VarChar(255)
  password       String?   @db.VarChar(255)
  resume_pdf     String?   @db.VarChar(255)
  resume_docx    String?   @db.VarChar(255)
  isdownloadable Int?
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  updated_at     DateTime  @default(now()) @db.Timestamp(6)
  deleted_at     DateTime? @db.Timestamp(6)
}

model applications {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String    @db.VarChar(255)
  image      String    @db.VarChar(255)
  status     Int?      @default(1) @db.SmallInt
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)

  // Index for active applications
  @@index([deleted_at, status], map: "idx_applications_active")
}

model portfolios {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title      String    @db.VarChar(255)
  tech       String[]
  link       String    @db.VarChar(255)
  image      String    @db.VarChar(255)
  status     Int?      @default(1) @db.SmallInt
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)

  @@index([deleted_at], map: "idx_portfolios_deleted_at")
  @@index([deleted_at, status], map: "idx_portfolios_active")
}

model website {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status     Int?      @default(1) @db.SmallInt
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)
}

model testimonials {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  author      String    @db.VarChar(255)
  description String    @db.VarChar(255)
  image       String    @db.VarChar(255)
  job         String    @db.VarChar(255)
  status      Int?      @default(1) @db.SmallInt
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  deleted_at  DateTime? @db.Timestamp(6)
}

model blogs {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String    @db.VarChar(255)
  date        String    @db.VarChar(255)
  description String    @db.VarChar(255)
  link        String    @db.VarChar(255)
  image       String    @db.VarChar(255)
  status      Int?      @default(1) @db.SmallInt
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  deleted_at  DateTime? @db.Timestamp(6)
}

model messages {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String    @db.VarChar(255)
  email      String    @db.VarChar(255)
  message    String    @db.VarChar(255)
  status     Int?      @default(1) @db.SmallInt
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)
}
